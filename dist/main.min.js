(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"/Users/saurabhk/Workspace/Playground/Node Projects/phaser/tictactoe/src/js/config.js":[function(require,module,exports){
/**
 * Created by saurabhk on 10/07/16.
 */
module.exports = {
    graphicPadding: 50,
    gameBoundaryWidth:10
};
},{}],"/Users/saurabhk/Workspace/Playground/Node Projects/phaser/tictactoe/src/js/entities/player.js":[function(require,module,exports){
var Player = function (game, x, y) {
    Phaser.Sprite.call(this, game, x, y, 'testsprite');
    game.add.existing(this);
};

Player.prototype = Object.create(Phaser.Sprite.prototype);
Player.prototype.constructor = Player;

/**
 * Automatically called by World.update
 */
Player.prototype.update = function () {
};

module.exports = Player;

},{}],"/Users/saurabhk/Workspace/Playground/Node Projects/phaser/tictactoe/src/js/main.js":[function(require,module,exports){
'use strict';

var game = new Phaser.Game(800, 600, Phaser.AUTO, 'tictactoe-game');

window.Utils = require('./utils/utils');
require('./utils/prototype');
window.playerState = {
    currentLevel: 'Game'
};
window.globalUser = {};
globalUser.settings = {
    grids:3
};

game.state.add('Boot', require('./states/boot'));
game.state.add('Splash', require('./states/splash'));
game.state.add('Preloader', require('./states/preloader'));
game.state.add('Menu', require('./states/menu'));
game.state.add('Game', require('./states/game'));
game.state.add('GameOver', require('./states/gameOver'));

game.state.start('Boot');

},{"./states/boot":"/Users/saurabhk/Workspace/Playground/Node Projects/phaser/tictactoe/src/js/states/boot.js","./states/game":"/Users/saurabhk/Workspace/Playground/Node Projects/phaser/tictactoe/src/js/states/game.js","./states/gameOver":"/Users/saurabhk/Workspace/Playground/Node Projects/phaser/tictactoe/src/js/states/gameOver.js","./states/menu":"/Users/saurabhk/Workspace/Playground/Node Projects/phaser/tictactoe/src/js/states/menu.js","./states/preloader":"/Users/saurabhk/Workspace/Playground/Node Projects/phaser/tictactoe/src/js/states/preloader.js","./states/splash":"/Users/saurabhk/Workspace/Playground/Node Projects/phaser/tictactoe/src/js/states/splash.js","./utils/prototype":"/Users/saurabhk/Workspace/Playground/Node Projects/phaser/tictactoe/src/js/utils/prototype.js","./utils/utils":"/Users/saurabhk/Workspace/Playground/Node Projects/phaser/tictactoe/src/js/utils/utils.js"}],"/Users/saurabhk/Workspace/Playground/Node Projects/phaser/tictactoe/src/js/states/boot.js":[function(require,module,exports){
var Boot = function () {
};

module.exports = Boot;

Boot.prototype = {

    preload: function () {
        this.load.image('preloader', 'assets/preloader.gif');
    },

    create: function () {
        this.game.input.maxPointers = 1;
        this.game.stage.backgroundColor = "#ffffff";
        if (this.game.device.desktop) {
            this.game.stage.scale.pageAlignHorizontally = true;
        } else {
            this.game.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;
            this.game.scale.minWidth = 480;
            this.game.scale.minHeight = 260;
            this.game.scale.maxWidth = 640;
            this.game.scale.maxHeight = 480;
            //this.game.scale.forceLandscape = true;
            this.game.scale.pageAlignHorizontally = true;
            this.game.scale.updateLayout(true);
        }

        this.game.state.start('Preloader');
    }
};

},{}],"/Users/saurabhk/Workspace/Playground/Node Projects/phaser/tictactoe/src/js/states/game.js":[function(require,module,exports){
var Player = require('../entities/player');
var config = require('../config');
var utils = require('../utils/utils');

var Game = function () {
    this.testentity = null;
    this.graphics = null;
    this.sectionSize = null;
    this.turn = true;
    this.boardState = [];
};

module.exports = Game;

Game.prototype = {

    create: function () {
        var i,j;
        var graphics = this.game.add.graphics(config.graphicPadding, config.graphicPadding);
        this.graphics = graphics;

        // set a fill and line style
        graphics.lineStyle(config.gameBoundaryWidth, 0xdddddd);
        var gridDetails = utils.gridSize(this.game);

        // Vertical lines
        for (i = 1; i < globalUser.settings.grids; i++) {
            graphics.moveTo(i * gridDetails[0] + (i-1) * config.gameBoundaryWidth,0);
            graphics.lineTo(i * gridDetails[0] + (i-1) * config.gameBoundaryWidth, gridDetails[1]);
        }

        // Horizontal lines
        for (j = 1; j < globalUser.settings.grids; j++) {
            graphics.moveTo(0, j * gridDetails[0] + (j-1) * config.gameBoundaryWidth);
            graphics.lineTo(gridDetails[1], j * gridDetails[0] + (j-1) * config.gameBoundaryWidth);
        }
        this.sectionSize = gridDetails[1]/globalUser.settings.grids;
        this.input.onDown.add(this.addPlayingPiece, this);

        // Initialize board state with all 0 by default
        for(i = 0; i < globalUser.settings.grids; i++) {
            for(j = 0; j < globalUser.settings.grids; j++) {
                if (this.boardState[i]) {
                    this.boardState[i][j] = 0
                } else {
                    this.boardState[i] = [];
                    this.boardState[i][j] = 0
                }
            }
        }
    },

    update: function () {
    },

    onInputDown: function () {
        this.game.state.start('Menu');
    },

    addPlayingPiece: function() {
        var xCordinate;
        var yCordinate;
        var sectionSize = this.sectionSize;
        var mouse = this.input.position;
        mouse.x = mouse.x - config.graphicPadding;
        mouse.y = mouse.y - config.graphicPadding;

        for (var x = 0;x < globalUser.settings.grids;x++) {
            for (var y = 0;y < globalUser.settings.grids;y++) {
                xCordinate = x * sectionSize;
                yCordinate = y * sectionSize;

                if (
                    mouse.x >= xCordinate && mouse.x <= xCordinate + sectionSize &&
                    mouse.y >= yCordinate && mouse.y <= yCordinate + sectionSize
                    ) {

                    //clearPlayingArea(xCordinate, yCordinate);
                    globalUser.turn = [y,x];
                    if(this.boardState[y][x] == 0) {
                        if (this.turn) {
                            this.drawX(xCordinate, yCordinate);
                            this.boardState[y][x] = "X";
                        } else {
                            this.drawO(xCordinate, yCordinate);
                            this.boardState[y][x] = "O";
                        }
                        this.turn = !this.turn;
                        if(this.isStateTerminal()) {
                            this.game.state.start("GameOver");
                        }
                    }

                }
            }
        }
    },

    drawO: function(x, y) {
        var sectionSize = this.sectionSize;
        var graphics = this.graphics;
        var halfSectionSize = (0.5 * sectionSize);
        var centerX = x + halfSectionSize;
        var centerY = y + halfSectionSize;
        var diameter = sectionSize * 0.4;
            graphics.lineStyle(10, 0x01bBC2);
            graphics.drawCircle(centerX, centerY, diameter);

    },

    drawX: function(x,y) {
        var graphics = this.graphics;
        var sectionSize = this.sectionSize;
        graphics.lineStyle(10, 0xf1be32);
        var offset = sectionSize * 0.3;
        graphics.moveTo(x + offset, y + offset);
        graphics.lineTo(x + sectionSize - offset, y + sectionSize - offset);

        graphics.moveTo(x + offset, y + sectionSize - offset);
        graphics.lineTo(x + sectionSize - offset, y + offset);
    },

    isStateTerminal: function() {
        var x, y;
        var diagonals = [[],[]];
        // Check rows
        for(x = 0; x <this.boardState.length; x++) {
            var row = this.boardState[x];
            if (row[0] != 0 && row.isSingleValued()) {
                return true;
            }
        }

        // Check columns
        for(x = 0;x < globalUser.settings.grids;x++) {
            var col = this.boardState.map(function(value) { return value[x]; });
            if (col[0] != 0 && col.isSingleValued()) {
                return true;
            }
        }

        // Check diagonals
        for(x = 0;x < globalUser.settings.grids;x++) {
            for(y = 0;y < globalUser.settings.grids;y++) {
                if(x == y) {
                    diagonals[0].push(this.boardState[x][y]);
                    diagonals[1].push(this.boardState[globalUser.settings.grids - 1 - x][y]);
                }

            }
        }

        for(x = 0; x <diagonals.length; x++){
            var diagonal = diagonals[x];
            if (diagonal[0] != 0 && diagonal.isSingleValued()) {
                return true;
            }
        }
        return false;
    }
};

},{"../config":"/Users/saurabhk/Workspace/Playground/Node Projects/phaser/tictactoe/src/js/config.js","../entities/player":"/Users/saurabhk/Workspace/Playground/Node Projects/phaser/tictactoe/src/js/entities/player.js","../utils/utils":"/Users/saurabhk/Workspace/Playground/Node Projects/phaser/tictactoe/src/js/utils/utils.js"}],"/Users/saurabhk/Workspace/Playground/Node Projects/phaser/tictactoe/src/js/states/gameOver.js":[function(require,module,exports){
/**
 * Created by saurabhk on 11/07/16.
 */
var GameOver = function () {
    this.text = null;
};

module.exports = GameOver;

GameOver.prototype = {

    create: function () {
        var x = this.game.width / 2;
        var y = this.game.height / 2;

        var style = {font: "65px Arial", fill: "#dddddd", align: "center"};

        this.text = this.add.text(x - 300, y - 200, "GameOver", style);

        this.input.onDown.add(this.onDown, this);
    },

    update: function () {
    },

    onDown: function () {
        this.game.state.start(playerState.currentLevel);
    }
};

},{}],"/Users/saurabhk/Workspace/Playground/Node Projects/phaser/tictactoe/src/js/states/menu.js":[function(require,module,exports){
var Menu = function () {
    this.text = null;
};

module.exports = Menu;

Menu.prototype = {

    create: function () {
        var x = this.game.width / 2;
        var y = this.game.height / 2;

        var style = {font: "65px Arial", fill: "#dddddd", align: "center"};

        this.text = this.add.text(x - 300, y - 200, "Press to Start", style);

        this.input.onDown.add(this.onDown, this);
    },

    update: function () {
    },

    onDown: function () {
        this.game.state.start(playerState.currentLevel);
    }
};

},{}],"/Users/saurabhk/Workspace/Playground/Node Projects/phaser/tictactoe/src/js/states/preloader.js":[function(require,module,exports){
var Preloader = function (game) {
    this.asset = null;
    this.ready = false;
};

module.exports = Preloader;

Preloader.prototype = {

    preload: function () {
        this.asset = this.add.sprite(320, 240, 'preloader');
        this.asset.anchor.setTo(0.5, 0.5);

        this.load.onLoadComplete.addOnce(this.onLoadComplete, this);
        this.load.setPreloadSprite(this.asset);
        this.load.image('testsprite', 'assets/test.png');
    },

    create: function () {
        this.asset.cropEnabled = false;
    },

    update: function () {
        if (!!this.ready) {
            this.game.state.start('Menu');
        }
    },

    onLoadComplete: function () {
        this.ready = true;
    }
};

},{}],"/Users/saurabhk/Workspace/Playground/Node Projects/phaser/tictactoe/src/js/states/splash.js":[function(require,module,exports){
var Splash = function () {
};

module.exports = Splash;

Splash.prototype = {
    create: function () {
    }
};
},{}],"/Users/saurabhk/Workspace/Playground/Node Projects/phaser/tictactoe/src/js/utils/prototype.js":[function(require,module,exports){
/**
 * Created by saurabhk on 10/07/16.
 */
(function(){
    Array.prototype.isSingleValued = function() {
        return !!this.reduce(function(a, b){ return (a === b) ? a : NaN; });
    }
})();
},{}],"/Users/saurabhk/Workspace/Playground/Node Projects/phaser/tictactoe/src/js/utils/utils.js":[function(require,module,exports){
"use strict";
var config = require('./../config');
var Utils = {
    containsObject: function (obj, list) {
        var i;
        for (i = 0; i < list.length; i++) {
            if (list[i] === obj) {
                return true;
            }
        }

        return false;
    },

    gridSize: function(game) {
        var gameWidth =  Math.min(game.width, game.height) - 2 * config.graphicPadding;
        var gridTotalWidth = gameWidth - (globalUser.settings.grids - 1) * config.gameBoundaryWidth;
        return [gridTotalWidth / globalUser.settings.grids, gameWidth];
    }
};

module.exports = Utils;
},{"./../config":"/Users/saurabhk/Workspace/Playground/Node Projects/phaser/tictactoe/src/js/config.js"}]},{},["/Users/saurabhk/Workspace/Playground/Node Projects/phaser/tictactoe/src/js/main.js"])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvanMvY29uZmlnLmpzIiwic3JjL2pzL2VudGl0aWVzL3BsYXllci5qcyIsInNyYy9qcy9tYWluLmpzIiwic3JjL2pzL3N0YXRlcy9ib290LmpzIiwic3JjL2pzL3N0YXRlcy9nYW1lLmpzIiwic3JjL2pzL3N0YXRlcy9nYW1lT3Zlci5qcyIsInNyYy9qcy9zdGF0ZXMvbWVudS5qcyIsInNyYy9qcy9zdGF0ZXMvcHJlbG9hZGVyLmpzIiwic3JjL2pzL3N0YXRlcy9zcGxhc2guanMiLCJzcmMvanMvdXRpbHMvcHJvdG90eXBlLmpzIiwic3JjL2pzL3V0aWxzL3V0aWxzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FDQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDTkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDZkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUN0QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDOUJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNqS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzdCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDMUJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNoQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ1JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDUEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dmFyIGY9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKTt0aHJvdyBmLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsZn12YXIgbD1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxsLGwuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pIiwiLyoqXG4gKiBDcmVhdGVkIGJ5IHNhdXJhYmhrIG9uIDEwLzA3LzE2LlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBncmFwaGljUGFkZGluZzogNTAsXG4gICAgZ2FtZUJvdW5kYXJ5V2lkdGg6MTBcbn07IiwidmFyIFBsYXllciA9IGZ1bmN0aW9uIChnYW1lLCB4LCB5KSB7XG4gICAgUGhhc2VyLlNwcml0ZS5jYWxsKHRoaXMsIGdhbWUsIHgsIHksICd0ZXN0c3ByaXRlJyk7XG4gICAgZ2FtZS5hZGQuZXhpc3RpbmcodGhpcyk7XG59O1xuXG5QbGF5ZXIucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShQaGFzZXIuU3ByaXRlLnByb3RvdHlwZSk7XG5QbGF5ZXIucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gUGxheWVyO1xuXG4vKipcbiAqIEF1dG9tYXRpY2FsbHkgY2FsbGVkIGJ5IFdvcmxkLnVwZGF0ZVxuICovXG5QbGF5ZXIucHJvdG90eXBlLnVwZGF0ZSA9IGZ1bmN0aW9uICgpIHtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gUGxheWVyO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgZ2FtZSA9IG5ldyBQaGFzZXIuR2FtZSg4MDAsIDYwMCwgUGhhc2VyLkFVVE8sICd0aWN0YWN0b2UtZ2FtZScpO1xuXG53aW5kb3cuVXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzL3V0aWxzJyk7XG5yZXF1aXJlKCcuL3V0aWxzL3Byb3RvdHlwZScpO1xud2luZG93LnBsYXllclN0YXRlID0ge1xuICAgIGN1cnJlbnRMZXZlbDogJ0dhbWUnXG59O1xud2luZG93Lmdsb2JhbFVzZXIgPSB7fTtcbmdsb2JhbFVzZXIuc2V0dGluZ3MgPSB7XG4gICAgZ3JpZHM6M1xufTtcblxuZ2FtZS5zdGF0ZS5hZGQoJ0Jvb3QnLCByZXF1aXJlKCcuL3N0YXRlcy9ib290JykpO1xuZ2FtZS5zdGF0ZS5hZGQoJ1NwbGFzaCcsIHJlcXVpcmUoJy4vc3RhdGVzL3NwbGFzaCcpKTtcbmdhbWUuc3RhdGUuYWRkKCdQcmVsb2FkZXInLCByZXF1aXJlKCcuL3N0YXRlcy9wcmVsb2FkZXInKSk7XG5nYW1lLnN0YXRlLmFkZCgnTWVudScsIHJlcXVpcmUoJy4vc3RhdGVzL21lbnUnKSk7XG5nYW1lLnN0YXRlLmFkZCgnR2FtZScsIHJlcXVpcmUoJy4vc3RhdGVzL2dhbWUnKSk7XG5nYW1lLnN0YXRlLmFkZCgnR2FtZU92ZXInLCByZXF1aXJlKCcuL3N0YXRlcy9nYW1lT3ZlcicpKTtcblxuZ2FtZS5zdGF0ZS5zdGFydCgnQm9vdCcpO1xuIiwidmFyIEJvb3QgPSBmdW5jdGlvbiAoKSB7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEJvb3Q7XG5cbkJvb3QucHJvdG90eXBlID0ge1xuXG4gICAgcHJlbG9hZDogZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLmxvYWQuaW1hZ2UoJ3ByZWxvYWRlcicsICdhc3NldHMvcHJlbG9hZGVyLmdpZicpO1xuICAgIH0sXG5cbiAgICBjcmVhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5nYW1lLmlucHV0Lm1heFBvaW50ZXJzID0gMTtcbiAgICAgICAgdGhpcy5nYW1lLnN0YWdlLmJhY2tncm91bmRDb2xvciA9IFwiI2ZmZmZmZlwiO1xuICAgICAgICBpZiAodGhpcy5nYW1lLmRldmljZS5kZXNrdG9wKSB7XG4gICAgICAgICAgICB0aGlzLmdhbWUuc3RhZ2Uuc2NhbGUucGFnZUFsaWduSG9yaXpvbnRhbGx5ID0gdHJ1ZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuZ2FtZS5zY2FsZS5zY2FsZU1vZGUgPSBQaGFzZXIuU2NhbGVNYW5hZ2VyLlNIT1dfQUxMO1xuICAgICAgICAgICAgdGhpcy5nYW1lLnNjYWxlLm1pbldpZHRoID0gNDgwO1xuICAgICAgICAgICAgdGhpcy5nYW1lLnNjYWxlLm1pbkhlaWdodCA9IDI2MDtcbiAgICAgICAgICAgIHRoaXMuZ2FtZS5zY2FsZS5tYXhXaWR0aCA9IDY0MDtcbiAgICAgICAgICAgIHRoaXMuZ2FtZS5zY2FsZS5tYXhIZWlnaHQgPSA0ODA7XG4gICAgICAgICAgICAvL3RoaXMuZ2FtZS5zY2FsZS5mb3JjZUxhbmRzY2FwZSA9IHRydWU7XG4gICAgICAgICAgICB0aGlzLmdhbWUuc2NhbGUucGFnZUFsaWduSG9yaXpvbnRhbGx5ID0gdHJ1ZTtcbiAgICAgICAgICAgIHRoaXMuZ2FtZS5zY2FsZS51cGRhdGVMYXlvdXQodHJ1ZSk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmdhbWUuc3RhdGUuc3RhcnQoJ1ByZWxvYWRlcicpO1xuICAgIH1cbn07XG4iLCJ2YXIgUGxheWVyID0gcmVxdWlyZSgnLi4vZW50aXRpZXMvcGxheWVyJyk7XG52YXIgY29uZmlnID0gcmVxdWlyZSgnLi4vY29uZmlnJyk7XG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLi91dGlscy91dGlscycpO1xuXG52YXIgR2FtZSA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLnRlc3RlbnRpdHkgPSBudWxsO1xuICAgIHRoaXMuZ3JhcGhpY3MgPSBudWxsO1xuICAgIHRoaXMuc2VjdGlvblNpemUgPSBudWxsO1xuICAgIHRoaXMudHVybiA9IHRydWU7XG4gICAgdGhpcy5ib2FyZFN0YXRlID0gW107XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEdhbWU7XG5cbkdhbWUucHJvdG90eXBlID0ge1xuXG4gICAgY3JlYXRlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBpLGo7XG4gICAgICAgIHZhciBncmFwaGljcyA9IHRoaXMuZ2FtZS5hZGQuZ3JhcGhpY3MoY29uZmlnLmdyYXBoaWNQYWRkaW5nLCBjb25maWcuZ3JhcGhpY1BhZGRpbmcpO1xuICAgICAgICB0aGlzLmdyYXBoaWNzID0gZ3JhcGhpY3M7XG5cbiAgICAgICAgLy8gc2V0IGEgZmlsbCBhbmQgbGluZSBzdHlsZVxuICAgICAgICBncmFwaGljcy5saW5lU3R5bGUoY29uZmlnLmdhbWVCb3VuZGFyeVdpZHRoLCAweGRkZGRkZCk7XG4gICAgICAgIHZhciBncmlkRGV0YWlscyA9IHV0aWxzLmdyaWRTaXplKHRoaXMuZ2FtZSk7XG5cbiAgICAgICAgLy8gVmVydGljYWwgbGluZXNcbiAgICAgICAgZm9yIChpID0gMTsgaSA8IGdsb2JhbFVzZXIuc2V0dGluZ3MuZ3JpZHM7IGkrKykge1xuICAgICAgICAgICAgZ3JhcGhpY3MubW92ZVRvKGkgKiBncmlkRGV0YWlsc1swXSArIChpLTEpICogY29uZmlnLmdhbWVCb3VuZGFyeVdpZHRoLDApO1xuICAgICAgICAgICAgZ3JhcGhpY3MubGluZVRvKGkgKiBncmlkRGV0YWlsc1swXSArIChpLTEpICogY29uZmlnLmdhbWVCb3VuZGFyeVdpZHRoLCBncmlkRGV0YWlsc1sxXSk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBIb3Jpem9udGFsIGxpbmVzXG4gICAgICAgIGZvciAoaiA9IDE7IGogPCBnbG9iYWxVc2VyLnNldHRpbmdzLmdyaWRzOyBqKyspIHtcbiAgICAgICAgICAgIGdyYXBoaWNzLm1vdmVUbygwLCBqICogZ3JpZERldGFpbHNbMF0gKyAoai0xKSAqIGNvbmZpZy5nYW1lQm91bmRhcnlXaWR0aCk7XG4gICAgICAgICAgICBncmFwaGljcy5saW5lVG8oZ3JpZERldGFpbHNbMV0sIGogKiBncmlkRGV0YWlsc1swXSArIChqLTEpICogY29uZmlnLmdhbWVCb3VuZGFyeVdpZHRoKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnNlY3Rpb25TaXplID0gZ3JpZERldGFpbHNbMV0vZ2xvYmFsVXNlci5zZXR0aW5ncy5ncmlkcztcbiAgICAgICAgdGhpcy5pbnB1dC5vbkRvd24uYWRkKHRoaXMuYWRkUGxheWluZ1BpZWNlLCB0aGlzKTtcblxuICAgICAgICAvLyBJbml0aWFsaXplIGJvYXJkIHN0YXRlIHdpdGggYWxsIDAgYnkgZGVmYXVsdFxuICAgICAgICBmb3IoaSA9IDA7IGkgPCBnbG9iYWxVc2VyLnNldHRpbmdzLmdyaWRzOyBpKyspIHtcbiAgICAgICAgICAgIGZvcihqID0gMDsgaiA8IGdsb2JhbFVzZXIuc2V0dGluZ3MuZ3JpZHM7IGorKykge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmJvYXJkU3RhdGVbaV0pIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5ib2FyZFN0YXRlW2ldW2pdID0gMFxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYm9hcmRTdGF0ZVtpXSA9IFtdO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmJvYXJkU3RhdGVbaV1bal0gPSAwXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSxcblxuICAgIHVwZGF0ZTogZnVuY3Rpb24gKCkge1xuICAgIH0sXG5cbiAgICBvbklucHV0RG93bjogZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLmdhbWUuc3RhdGUuc3RhcnQoJ01lbnUnKTtcbiAgICB9LFxuXG4gICAgYWRkUGxheWluZ1BpZWNlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIHhDb3JkaW5hdGU7XG4gICAgICAgIHZhciB5Q29yZGluYXRlO1xuICAgICAgICB2YXIgc2VjdGlvblNpemUgPSB0aGlzLnNlY3Rpb25TaXplO1xuICAgICAgICB2YXIgbW91c2UgPSB0aGlzLmlucHV0LnBvc2l0aW9uO1xuICAgICAgICBtb3VzZS54ID0gbW91c2UueCAtIGNvbmZpZy5ncmFwaGljUGFkZGluZztcbiAgICAgICAgbW91c2UueSA9IG1vdXNlLnkgLSBjb25maWcuZ3JhcGhpY1BhZGRpbmc7XG5cbiAgICAgICAgZm9yICh2YXIgeCA9IDA7eCA8IGdsb2JhbFVzZXIuc2V0dGluZ3MuZ3JpZHM7eCsrKSB7XG4gICAgICAgICAgICBmb3IgKHZhciB5ID0gMDt5IDwgZ2xvYmFsVXNlci5zZXR0aW5ncy5ncmlkczt5KyspIHtcbiAgICAgICAgICAgICAgICB4Q29yZGluYXRlID0geCAqIHNlY3Rpb25TaXplO1xuICAgICAgICAgICAgICAgIHlDb3JkaW5hdGUgPSB5ICogc2VjdGlvblNpemU7XG5cbiAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgIG1vdXNlLnggPj0geENvcmRpbmF0ZSAmJiBtb3VzZS54IDw9IHhDb3JkaW5hdGUgKyBzZWN0aW9uU2l6ZSAmJlxuICAgICAgICAgICAgICAgICAgICBtb3VzZS55ID49IHlDb3JkaW5hdGUgJiYgbW91c2UueSA8PSB5Q29yZGluYXRlICsgc2VjdGlvblNpemVcbiAgICAgICAgICAgICAgICAgICAgKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgLy9jbGVhclBsYXlpbmdBcmVhKHhDb3JkaW5hdGUsIHlDb3JkaW5hdGUpO1xuICAgICAgICAgICAgICAgICAgICBnbG9iYWxVc2VyLnR1cm4gPSBbeSx4XTtcbiAgICAgICAgICAgICAgICAgICAgaWYodGhpcy5ib2FyZFN0YXRlW3ldW3hdID09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLnR1cm4pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmRyYXdYKHhDb3JkaW5hdGUsIHlDb3JkaW5hdGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYm9hcmRTdGF0ZVt5XVt4XSA9IFwiWFwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmRyYXdPKHhDb3JkaW5hdGUsIHlDb3JkaW5hdGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYm9hcmRTdGF0ZVt5XVt4XSA9IFwiT1wiO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy50dXJuID0gIXRoaXMudHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKHRoaXMuaXNTdGF0ZVRlcm1pbmFsKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmdhbWUuc3RhdGUuc3RhcnQoXCJHYW1lT3ZlclwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSxcblxuICAgIGRyYXdPOiBmdW5jdGlvbih4LCB5KSB7XG4gICAgICAgIHZhciBzZWN0aW9uU2l6ZSA9IHRoaXMuc2VjdGlvblNpemU7XG4gICAgICAgIHZhciBncmFwaGljcyA9IHRoaXMuZ3JhcGhpY3M7XG4gICAgICAgIHZhciBoYWxmU2VjdGlvblNpemUgPSAoMC41ICogc2VjdGlvblNpemUpO1xuICAgICAgICB2YXIgY2VudGVyWCA9IHggKyBoYWxmU2VjdGlvblNpemU7XG4gICAgICAgIHZhciBjZW50ZXJZID0geSArIGhhbGZTZWN0aW9uU2l6ZTtcbiAgICAgICAgdmFyIGRpYW1ldGVyID0gc2VjdGlvblNpemUgKiAwLjQ7XG4gICAgICAgICAgICBncmFwaGljcy5saW5lU3R5bGUoMTAsIDB4MDFiQkMyKTtcbiAgICAgICAgICAgIGdyYXBoaWNzLmRyYXdDaXJjbGUoY2VudGVyWCwgY2VudGVyWSwgZGlhbWV0ZXIpO1xuXG4gICAgfSxcblxuICAgIGRyYXdYOiBmdW5jdGlvbih4LHkpIHtcbiAgICAgICAgdmFyIGdyYXBoaWNzID0gdGhpcy5ncmFwaGljcztcbiAgICAgICAgdmFyIHNlY3Rpb25TaXplID0gdGhpcy5zZWN0aW9uU2l6ZTtcbiAgICAgICAgZ3JhcGhpY3MubGluZVN0eWxlKDEwLCAweGYxYmUzMik7XG4gICAgICAgIHZhciBvZmZzZXQgPSBzZWN0aW9uU2l6ZSAqIDAuMztcbiAgICAgICAgZ3JhcGhpY3MubW92ZVRvKHggKyBvZmZzZXQsIHkgKyBvZmZzZXQpO1xuICAgICAgICBncmFwaGljcy5saW5lVG8oeCArIHNlY3Rpb25TaXplIC0gb2Zmc2V0LCB5ICsgc2VjdGlvblNpemUgLSBvZmZzZXQpO1xuXG4gICAgICAgIGdyYXBoaWNzLm1vdmVUbyh4ICsgb2Zmc2V0LCB5ICsgc2VjdGlvblNpemUgLSBvZmZzZXQpO1xuICAgICAgICBncmFwaGljcy5saW5lVG8oeCArIHNlY3Rpb25TaXplIC0gb2Zmc2V0LCB5ICsgb2Zmc2V0KTtcbiAgICB9LFxuXG4gICAgaXNTdGF0ZVRlcm1pbmFsOiBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIHgsIHk7XG4gICAgICAgIHZhciBkaWFnb25hbHMgPSBbW10sW11dO1xuICAgICAgICAvLyBDaGVjayByb3dzXG4gICAgICAgIGZvcih4ID0gMDsgeCA8dGhpcy5ib2FyZFN0YXRlLmxlbmd0aDsgeCsrKSB7XG4gICAgICAgICAgICB2YXIgcm93ID0gdGhpcy5ib2FyZFN0YXRlW3hdO1xuICAgICAgICAgICAgaWYgKHJvd1swXSAhPSAwICYmIHJvdy5pc1NpbmdsZVZhbHVlZCgpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvLyBDaGVjayBjb2x1bW5zXG4gICAgICAgIGZvcih4ID0gMDt4IDwgZ2xvYmFsVXNlci5zZXR0aW5ncy5ncmlkczt4KyspIHtcbiAgICAgICAgICAgIHZhciBjb2wgPSB0aGlzLmJvYXJkU3RhdGUubWFwKGZ1bmN0aW9uKHZhbHVlKSB7IHJldHVybiB2YWx1ZVt4XTsgfSk7XG4gICAgICAgICAgICBpZiAoY29sWzBdICE9IDAgJiYgY29sLmlzU2luZ2xlVmFsdWVkKCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIENoZWNrIGRpYWdvbmFsc1xuICAgICAgICBmb3IoeCA9IDA7eCA8IGdsb2JhbFVzZXIuc2V0dGluZ3MuZ3JpZHM7eCsrKSB7XG4gICAgICAgICAgICBmb3IoeSA9IDA7eSA8IGdsb2JhbFVzZXIuc2V0dGluZ3MuZ3JpZHM7eSsrKSB7XG4gICAgICAgICAgICAgICAgaWYoeCA9PSB5KSB7XG4gICAgICAgICAgICAgICAgICAgIGRpYWdvbmFsc1swXS5wdXNoKHRoaXMuYm9hcmRTdGF0ZVt4XVt5XSk7XG4gICAgICAgICAgICAgICAgICAgIGRpYWdvbmFsc1sxXS5wdXNoKHRoaXMuYm9hcmRTdGF0ZVtnbG9iYWxVc2VyLnNldHRpbmdzLmdyaWRzIC0gMSAtIHhdW3ldKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGZvcih4ID0gMDsgeCA8ZGlhZ29uYWxzLmxlbmd0aDsgeCsrKXtcbiAgICAgICAgICAgIHZhciBkaWFnb25hbCA9IGRpYWdvbmFsc1t4XTtcbiAgICAgICAgICAgIGlmIChkaWFnb25hbFswXSAhPSAwICYmIGRpYWdvbmFsLmlzU2luZ2xlVmFsdWVkKCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxufTtcbiIsIi8qKlxuICogQ3JlYXRlZCBieSBzYXVyYWJoayBvbiAxMS8wNy8xNi5cbiAqL1xudmFyIEdhbWVPdmVyID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMudGV4dCA9IG51bGw7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEdhbWVPdmVyO1xuXG5HYW1lT3Zlci5wcm90b3R5cGUgPSB7XG5cbiAgICBjcmVhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHggPSB0aGlzLmdhbWUud2lkdGggLyAyO1xuICAgICAgICB2YXIgeSA9IHRoaXMuZ2FtZS5oZWlnaHQgLyAyO1xuXG4gICAgICAgIHZhciBzdHlsZSA9IHtmb250OiBcIjY1cHggQXJpYWxcIiwgZmlsbDogXCIjZGRkZGRkXCIsIGFsaWduOiBcImNlbnRlclwifTtcblxuICAgICAgICB0aGlzLnRleHQgPSB0aGlzLmFkZC50ZXh0KHggLSAzMDAsIHkgLSAyMDAsIFwiR2FtZU92ZXJcIiwgc3R5bGUpO1xuXG4gICAgICAgIHRoaXMuaW5wdXQub25Eb3duLmFkZCh0aGlzLm9uRG93biwgdGhpcyk7XG4gICAgfSxcblxuICAgIHVwZGF0ZTogZnVuY3Rpb24gKCkge1xuICAgIH0sXG5cbiAgICBvbkRvd246IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5nYW1lLnN0YXRlLnN0YXJ0KHBsYXllclN0YXRlLmN1cnJlbnRMZXZlbCk7XG4gICAgfVxufTtcbiIsInZhciBNZW51ID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMudGV4dCA9IG51bGw7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IE1lbnU7XG5cbk1lbnUucHJvdG90eXBlID0ge1xuXG4gICAgY3JlYXRlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB4ID0gdGhpcy5nYW1lLndpZHRoIC8gMjtcbiAgICAgICAgdmFyIHkgPSB0aGlzLmdhbWUuaGVpZ2h0IC8gMjtcblxuICAgICAgICB2YXIgc3R5bGUgPSB7Zm9udDogXCI2NXB4IEFyaWFsXCIsIGZpbGw6IFwiI2RkZGRkZFwiLCBhbGlnbjogXCJjZW50ZXJcIn07XG5cbiAgICAgICAgdGhpcy50ZXh0ID0gdGhpcy5hZGQudGV4dCh4IC0gMzAwLCB5IC0gMjAwLCBcIlByZXNzIHRvIFN0YXJ0XCIsIHN0eWxlKTtcblxuICAgICAgICB0aGlzLmlucHV0Lm9uRG93bi5hZGQodGhpcy5vbkRvd24sIHRoaXMpO1xuICAgIH0sXG5cbiAgICB1cGRhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICB9LFxuXG4gICAgb25Eb3duOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuZ2FtZS5zdGF0ZS5zdGFydChwbGF5ZXJTdGF0ZS5jdXJyZW50TGV2ZWwpO1xuICAgIH1cbn07XG4iLCJ2YXIgUHJlbG9hZGVyID0gZnVuY3Rpb24gKGdhbWUpIHtcbiAgICB0aGlzLmFzc2V0ID0gbnVsbDtcbiAgICB0aGlzLnJlYWR5ID0gZmFsc2U7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFByZWxvYWRlcjtcblxuUHJlbG9hZGVyLnByb3RvdHlwZSA9IHtcblxuICAgIHByZWxvYWQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5hc3NldCA9IHRoaXMuYWRkLnNwcml0ZSgzMjAsIDI0MCwgJ3ByZWxvYWRlcicpO1xuICAgICAgICB0aGlzLmFzc2V0LmFuY2hvci5zZXRUbygwLjUsIDAuNSk7XG5cbiAgICAgICAgdGhpcy5sb2FkLm9uTG9hZENvbXBsZXRlLmFkZE9uY2UodGhpcy5vbkxvYWRDb21wbGV0ZSwgdGhpcyk7XG4gICAgICAgIHRoaXMubG9hZC5zZXRQcmVsb2FkU3ByaXRlKHRoaXMuYXNzZXQpO1xuICAgICAgICB0aGlzLmxvYWQuaW1hZ2UoJ3Rlc3RzcHJpdGUnLCAnYXNzZXRzL3Rlc3QucG5nJyk7XG4gICAgfSxcblxuICAgIGNyZWF0ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLmFzc2V0LmNyb3BFbmFibGVkID0gZmFsc2U7XG4gICAgfSxcblxuICAgIHVwZGF0ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoISF0aGlzLnJlYWR5KSB7XG4gICAgICAgICAgICB0aGlzLmdhbWUuc3RhdGUuc3RhcnQoJ01lbnUnKTtcbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICBvbkxvYWRDb21wbGV0ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLnJlYWR5ID0gdHJ1ZTtcbiAgICB9XG59O1xuIiwidmFyIFNwbGFzaCA9IGZ1bmN0aW9uICgpIHtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gU3BsYXNoO1xuXG5TcGxhc2gucHJvdG90eXBlID0ge1xuICAgIGNyZWF0ZTogZnVuY3Rpb24gKCkge1xuICAgIH1cbn07IiwiLyoqXG4gKiBDcmVhdGVkIGJ5IHNhdXJhYmhrIG9uIDEwLzA3LzE2LlxuICovXG4oZnVuY3Rpb24oKXtcbiAgICBBcnJheS5wcm90b3R5cGUuaXNTaW5nbGVWYWx1ZWQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuICEhdGhpcy5yZWR1Y2UoZnVuY3Rpb24oYSwgYil7IHJldHVybiAoYSA9PT0gYikgPyBhIDogTmFOOyB9KTtcbiAgICB9XG59KSgpOyIsIlwidXNlIHN0cmljdFwiO1xudmFyIGNvbmZpZyA9IHJlcXVpcmUoJy4vLi4vY29uZmlnJyk7XG52YXIgVXRpbHMgPSB7XG4gICAgY29udGFpbnNPYmplY3Q6IGZ1bmN0aW9uIChvYmosIGxpc3QpIHtcbiAgICAgICAgdmFyIGk7XG4gICAgICAgIGZvciAoaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAobGlzdFtpXSA9PT0gb2JqKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSxcblxuICAgIGdyaWRTaXplOiBmdW5jdGlvbihnYW1lKSB7XG4gICAgICAgIHZhciBnYW1lV2lkdGggPSAgTWF0aC5taW4oZ2FtZS53aWR0aCwgZ2FtZS5oZWlnaHQpIC0gMiAqIGNvbmZpZy5ncmFwaGljUGFkZGluZztcbiAgICAgICAgdmFyIGdyaWRUb3RhbFdpZHRoID0gZ2FtZVdpZHRoIC0gKGdsb2JhbFVzZXIuc2V0dGluZ3MuZ3JpZHMgLSAxKSAqIGNvbmZpZy5nYW1lQm91bmRhcnlXaWR0aDtcbiAgICAgICAgcmV0dXJuIFtncmlkVG90YWxXaWR0aCAvIGdsb2JhbFVzZXIuc2V0dGluZ3MuZ3JpZHMsIGdhbWVXaWR0aF07XG4gICAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBVdGlsczsiXX0=
